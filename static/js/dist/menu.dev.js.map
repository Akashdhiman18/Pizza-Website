{"version":3,"sources":["menu.js"],"names":["cartIconBtn","document","querySelector","addEventListener","cartContainer","classList","toggle","checkout","window","location","href","addToCart","button","itemName","getAttribute","itemPriceAttr","isNaN","console","error","itemPrice","parseFloat","itemSize","value","itemBase","itemQuantity","parseInt","cartItem","name","size","base","price","quantity","updateCart","cartItemsContainer","cartItemDiv","createElement","totalDiv","itemTotal","innerHTML","toFixed","appendChild","currentTotal","innerText","replace","newTotal"],"mappings":";;AACK;AACA,IAAMA,WAAW,GAAGC,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,CAApB;AACAF,WAAW,CAACG,gBAAZ,CAA6B,OAA7B,EAAsC,YAAW;AAC7C,MAAMC,aAAa,GAAGH,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,CAAtB;AACAE,EAAAA,aAAa,CAACC,SAAd,CAAwBC,MAAxB,CAA+B,MAA/B;AACH,CAHD;;AAKA,SAASC,QAAT,GAAoB;AAChB;AACAC,EAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,WAAvB;AACH;;AAGD,SAASC,SAAT,CAAmBC,MAAnB,EAA2B;AACxB,MAAMC,QAAQ,GAAGD,MAAM,CAACE,YAAP,CAAoB,WAApB,CAAjB;AACA,MAAMC,aAAa,GAAGH,MAAM,CAACE,YAAP,CAAoB,YAApB,CAAtB,CAFwB,CAIxB;;AACA,MAAI,CAACC,aAAD,IAAkBC,KAAK,CAACD,aAAD,CAA3B,EAA4C;AACxCE,IAAAA,OAAO,CAACC,KAAR,uDAA6DL,QAA7D;AACA;AACH;;AAED,MAAMM,SAAS,GAAGC,UAAU,CAACL,aAAD,CAA5B;AACA,MAAMM,QAAQ,GAAGpB,QAAQ,CAACC,aAAT,CAAuB,cAAvB,EAAuCoB,KAAxD;AACA,MAAMC,QAAQ,GAAGtB,QAAQ,CAACC,aAAT,CAAuB,cAAvB,EAAuCoB,KAAxD;AACA,MAAME,YAAY,GAAGC,QAAQ,CAACxB,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,EAA0CoB,KAA3C,CAAR,IAA6D,CAAlF;AAEA,MAAMI,QAAQ,GAAG;AACbC,IAAAA,IAAI,EAAEd,QADO;AAEbe,IAAAA,IAAI,EAAEP,QAFO;AAGbQ,IAAAA,IAAI,EAAEN,QAHO;AAIbO,IAAAA,KAAK,EAAEX,SAJM;AAKbY,IAAAA,QAAQ,EAAEP;AALG,GAAjB;AAQAQ,EAAAA,UAAU,CAACN,QAAD,CAAV;AACH;;AAGA,SAASM,UAAT,CAAoBN,QAApB,EAA8B;AAC3B,MAAMO,kBAAkB,GAAGhC,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAA3B;AACA,MAAMgC,WAAW,GAAGjC,QAAQ,CAACkC,aAAT,CAAuB,KAAvB,CAApB;AACA,MAAMC,QAAQ,GAAGnC,QAAQ,CAACC,aAAT,CAAuB,cAAvB,CAAjB,CAH2B,CAK3B;;AACA,MAAMmC,SAAS,GAAGX,QAAQ,CAACI,KAAT,GAAiBJ,QAAQ,CAACK,QAA5C,CAN2B,CAQ3B;;AACAG,EAAAA,WAAW,CAACI,SAAZ,gBAA8BZ,QAAQ,CAACK,QAAvC,gBAAqDL,QAAQ,CAACC,IAA9D,iBAAyEU,SAAS,CAACE,OAAV,CAAkB,CAAlB,CAAzE;AACAN,EAAAA,kBAAkB,CAACO,WAAnB,CAA+BN,WAA/B,EAV2B,CAY3B;;AACA,MAAMO,YAAY,GAAGrB,UAAU,CAACgB,QAAQ,CAACM,SAAT,CAAmBC,OAAnB,CAA2B,GAA3B,EAAgC,EAAhC,CAAD,CAAV,IAAmD,CAAxE;AACA,MAAMC,QAAQ,GAAGH,YAAY,GAAGJ,SAAhC,CAd2B,CAgB3B;;AACAD,EAAAA,QAAQ,CAACM,SAAT,cAAyBE,QAAQ,CAACL,OAAT,CAAiB,CAAjB,CAAzB;AACH","sourcesContent":["\r\n     // Function to toggle cart container (json file)\r\n     const cartIconBtn = document.querySelector('.cart-icon-btn');\r\n     cartIconBtn.addEventListener('click', function() {\r\n         const cartContainer = document.querySelector('.cart-container');\r\n         cartContainer.classList.toggle('open');\r\n     });\r\n     \r\n     function checkout() {\r\n         // Replace '/cg' with the actual URL of your checkout page\r\n         window.location.href = '/checkout';\r\n     }\r\n     \r\n     \r\n     function addToCart(button) {\r\n        const itemName = button.getAttribute('data-name');\r\n        const itemPriceAttr = button.getAttribute('data-price');\r\n        \r\n        // Check if itemPriceAttr is a valid number\r\n        if (!itemPriceAttr || isNaN(itemPriceAttr)) {\r\n            console.error(`Invalid or missing data-price attribute for ${itemName}`);\r\n            return;\r\n        }\r\n    \r\n        const itemPrice = parseFloat(itemPriceAttr);\r\n        const itemSize = document.querySelector('.size-select').value;\r\n        const itemBase = document.querySelector('.base-select').value;\r\n        const itemQuantity = parseInt(document.querySelector('.quantity-input').value) || 1;\r\n    \r\n        const cartItem = {\r\n            name: itemName,\r\n            size: itemSize,\r\n            base: itemBase,\r\n            price: itemPrice,\r\n            quantity: itemQuantity,\r\n        };\r\n    \r\n        updateCart(cartItem); \r\n    }\r\n    \r\n     \r\n     function updateCart(cartItem) {\r\n        const cartItemsContainer = document.querySelector('.cart-items');\r\n        const cartItemDiv = document.createElement('div');\r\n        const totalDiv = document.querySelector('.total-price');\r\n    \r\n        // Calculate item total price\r\n        const itemTotal = cartItem.price * cartItem.quantity;\r\n    \r\n        // Display item in the cart\r\n        cartItemDiv.innerHTML = `<p>${cartItem.quantity} x ${cartItem.name} - $${itemTotal.toFixed(2)}</p>`;\r\n        cartItemsContainer.appendChild(cartItemDiv);\r\n    \r\n        // Update total price\r\n        const currentTotal = parseFloat(totalDiv.innerText.replace('$', '')) || 0;\r\n        const newTotal = currentTotal + itemTotal;\r\n    \r\n        // Update totalDiv with the new total\r\n        totalDiv.innerText = `$${newTotal.toFixed(2)}`; \r\n    } \r\n    "],"file":"menu.dev.js"}