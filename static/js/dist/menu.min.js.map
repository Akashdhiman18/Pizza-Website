{"version":3,"sources":["menu.js"],"names":["cartIconBtn","document","querySelector","checkout","window","location","href","addToCart","button","itemName","getAttribute","itemPriceAttr","console","error","isNaN","itemSize","itemPrice","updateCart","itemBase","value","base","parseInt","price","quantity","concat","cartItem","itemTotal","cartItemDiv","createElement","innerHTML","currentTotal","parseFloat","totalDiv","innerText","replace","newTotal","toFixed","name","cartItemsContainer","appendChild","addEventListener"],"mappings":"aACK,IAAAA,YAAAC,SAAAC,cAAA,kBAOA,SAASC,WACLC,OAAAC,SAAAC,KAAA,YAKJ,SAASC,UAAUC,GACVC,IAAQA,EAAUC,EAAAA,aAAa,aAC/BC,EAAuBD,EAAAA,aAAa,cAItCE,GAAQC,IAARC,MAAAH,GAAAC,CAKEG,IAAQC,EAAYd,WAAAA,GAgB7Be,WAZoB,CAGPC,KAHOT,EAINO,KAPcf,SAACC,cAAc,gBAAxCiB,MAQYC,KAPSC,SAASpB,cAASC,gBAAciB,MAErDG,MAAAN,EAQUO,SAROF,SAAApB,SAAAC,cAAA,mBAAAiB,QAAA,SARbP,QAAAC,MAAA,+CAAAW,OAAAf,IAoBP,SAASQ,WAAWQ,GAMXC,IAAAA,EAA6BD,SAASF,cAE5C,eANMI,EAAc1B,SAAS2B,cAAc,OAO/BC,EAAZ5B,SAAAC,cAAuCqB,gBAIjCO,EAAeC,EAAWC,MAASC,EAAUC,SAInDF,EAAAH,UAAAG,MAAAA,OAAyBG,EAASC,SAAlCJ,OAAAA,OAAAP,EAAAY,KAAAL,QAAAA,OAAAN,EAAAU,QAAA,GAAAJ,QACHM,EAAAC,YAAAZ,GALG,IACMQ,GADeJ,WAAWC,EAASC,UAAUC,QAAQ,IAAK,MAAQ,GACxCR,EAGhCM,EAASC,UAAT,IAAAT,OAAyBW,EAASC,QAAQ,IAxDvCpC,YAAWwC,iBAAYtC,QAAc,WACdD,SAASC,cAAW,mBACvBD,UAASC,OAAAA","file":"menu.min.js","sourcesContent":["\r\n     // Function to toggle cart container (json file)\r\n     const cartIconBtn = document.querySelector('.cart-icon-btn');\r\n     cartIconBtn.addEventListener('click', function() {\r\n         const cartContainer = document.querySelector('.cart-container');\r\n         cartContainer.classList.toggle('open');\r\n     });\r\n     \r\n     function checkout() {\r\n         // Replace '/cg' with the actual URL of your checkout page\r\n         window.location.href = '/checkout';\r\n     }\r\n     \r\n     \r\n     function addToCart(button) {\r\n        const itemName = button.getAttribute('data-name');\r\n        const itemPriceAttr = button.getAttribute('data-price');\r\n        \r\n        // Check if itemPriceAttr is a valid number\r\n        if (!itemPriceAttr || isNaN(itemPriceAttr)) {\r\n            console.error(`Invalid or missing data-price attribute for ${itemName}`);\r\n            return;\r\n        }\r\n    \r\n        const itemPrice = parseFloat(itemPriceAttr);\r\n        const itemSize = document.querySelector('.size-select').value;\r\n        const itemBase = document.querySelector('.base-select').value;\r\n        const itemQuantity = parseInt(document.querySelector('.quantity-input').value) || 1;\r\n    \r\n        const cartItem = {\r\n            name: itemName,\r\n            size: itemSize,\r\n            base: itemBase,\r\n            price: itemPrice,\r\n            quantity: itemQuantity,\r\n        };\r\n    \r\n        updateCart(cartItem); \r\n    }\r\n    \r\n     \r\n     function updateCart(cartItem) {\r\n        const cartItemsContainer = document.querySelector('.cart-items');\r\n        const cartItemDiv = document.createElement('div');\r\n        const totalDiv = document.querySelector('.total-price');\r\n    \r\n        // Calculate item total price\r\n        const itemTotal = cartItem.price * cartItem.quantity;\r\n    \r\n        // Display item in the cart\r\n        cartItemDiv.innerHTML = `<p>${cartItem.quantity} x ${cartItem.name} - $${itemTotal.toFixed(2)}</p>`;\r\n        cartItemsContainer.appendChild(cartItemDiv);\r\n    \r\n        // Update total price\r\n        const currentTotal = parseFloat(totalDiv.innerText.replace('$', '')) || 0;\r\n        const newTotal = currentTotal + itemTotal;\r\n    \r\n        // Update totalDiv with the new total\r\n        totalDiv.innerText = `$${newTotal.toFixed(2)}`; \r\n    } \r\n    "]}